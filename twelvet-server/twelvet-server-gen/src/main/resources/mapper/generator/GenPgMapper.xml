<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.twelvet.server.gen.mapper.GenPgMapper">

	<resultMap type="GenTable" id="GenTableResult">
		<id     property="tableId"        column="table_id"          />
		<result property="dsName"         column="ds_name"        />
		<result property="dbType"         column="db_type"        />
		<result property="tableName"      column="table_name"        />
		<result property="tableComment"   column="table_comment"     />
		<result property="subTableName"   column="sub_table_name"    />
		<result property="subTableFkName" column="sub_table_fk_name" />
		<result property="className"      column="class_name"        />
		<result property="tplGroupId"    column="tpl_group_id"      />
		<result property="packageName"    column="package_name"      />
		<result property="moduleName"     column="module_name"       />
		<result property="businessName"   column="business_name"     />
		<result property="functionName"   column="function_name"     />
		<result property="functionAuthor" column="function_author"   />
		<result property="genType"        column="gen_type"          />
		<result property="genPath"        column="gen_path"          />
		<result property="options"        column="options"           />
		<result property="createBy"       column="create_by"         />
		<result property="createTime"     column="create_time"       />
		<result property="updateBy"       column="update_by"         />
		<result property="updateTime"     column="update_time"       />
		<result property="remark"         column="remark"            />
		<collection  property="columns"  javaType="java.util.List"  resultMap="GenTableColumnResult" />
	</resultMap>

	<resultMap type="GenTableColumn" id="GenTableColumnResult">
		<id     property="columnId"       column="column_id"      />
		<result property="tableId"        column="table_id"       />
		<result property="columnName"     column="column_name"    />
		<result property="columnComment"  column="column_comment" />
		<result property="columnType"     column="column_type"    />
		<result property="javaType"       column="java_type"      />
		<result property="javaField"      column="java_field"     />
		<result property="isPk"           column="is_pk"          />
		<result property="isIncrement"    column="is_increment"   />
		<result property="isRequired"     column="is_required"    />
		<result property="isInsert"       column="is_insert"      />
		<result property="isEdit"         column="is_edit"        />
		<result property="isList"         column="is_list"        />
		<result property="isQuery"        column="is_query"       />
		<result property="queryType"      column="query_type"     />
		<result property="htmlType"       column="html_type"      />
		<result property="dictType"       column="dict_type"      />
		<result property="sort"           column="sort"           />
		<result property="createBy"       column="create_by"      />
		<result property="createTime"     column="create_time"    />
		<result property="updateBy"       column="update_by"      />
		<result property="updateTime"     column="update_time"    />
	</resultMap>

	<select id="selectDbTableColumnsByName" parameterType="String" resultMap="GenTableColumnResult">
		SELECT column_name,
			   CASE WHEN is_nullable = 'NO' THEN '1' ELSE NULL END AS is_required,
			   CASE
				   WHEN column_name IN (SELECT a.attname
										FROM pg_index i
												 JOIN pg_attribute a ON a.attrelid = i.indrelid AND a.attnum = ANY (i.indkey)
										WHERE i.indrelid = #{tableName}::regclass ) THEN '1' ELSE '0'
				END AS is_pk,
			   ordinal_position AS sort,
			   col_description((SELECT oid FROM pg_class WHERE relname = #{tableName}), ordinal_position) AS column_comment,
			   CASE WHEN column_default LIKE 'nextval%' THEN '1' ELSE '0'
				END AS is_increment,
			   udt_name AS column_type
		FROM information_schema.columns
		WHERE table_schema = current_schema()
		  AND table_name = #{tableName}
		ORDER BY ordinal_position;
	</select>

	<select id="selectDbTableListByNames" resultMap="GenTableResult">
		SELECT
			'pg' AS db_type,
			t.tablename AS TABLE_NAME,
			obj_description ( relfilenode, 'pg_class' ) AS table_comment,
			now() AS create_time
			FROM
			pg_tables t
			left JOIN  pg_class c  ON t.tablename = c.relname
		WHERE
			t.tablename NOT LIKE'pg%'
			AND t.tablename NOT LIKE'sql_%'
			AND t.tablename = c.relname
			AND c.relname in
		<foreach collection="array" item="name" open="(" separator="," close=")">
			#{name}
		</foreach>
	</select>

	<select id="selectDbTableList" parameterType="GenTable" resultMap="GenTableResult">
		SELECT
		t.tablename AS TABLE_NAME,
		obj_description ( relfilenode, 'pg_class' ) AS table_comment,
		now() AS create_time
		FROM
		pg_tables t
		left JOIN  pg_class c  ON t.tablename = c.relname
		WHERE
		t.tablename NOT LIKE'pg%'
		AND t.tablename NOT LIKE'sql_%'
		AND t.tablename = c.relname
		<if test="tableName != null and tableName != ''">
			AND lower(t.tablename) like lower(concat('%', #{tableName}, '%'))
		</if>
		<if test="tableComment != null and tableComment != ''">
			AND lower(obj_description ( relfilenode, 'pg_class' )) like lower(concat('%', #{tableComment}, '%'))
		</if>
		<if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
			AND now() &gt;= to_char(#{beginTime},'%y%m%d')
		</if>
		<if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
			AND now() &lt;= to_char(#{endTime},'%y%m%d')
		</if>
	</select>

</mapper>
