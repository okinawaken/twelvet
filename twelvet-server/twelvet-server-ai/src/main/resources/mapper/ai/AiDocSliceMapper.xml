<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.twelvet.server.ai.mapper.AiDocSliceMapper">

    <resultMap type="AiDocSlice" id="AiDocSliceResult">
        <result property="sliceId" column="slice_id"/>
        <result property="knowledgeId" column="knowledge_id"/>
        <result property="docId" column="doc_id"/>
        <result property="vectorId" column="vector_id"/>
        <result property="sliceName" column="slice_name"/>
        <result property="content" column="content"/>
        <result property="delFlag" column="del_flag"/>
    </resultMap>

    <sql id="selectAiDocSliceVo">
        select slice_id,
               knowledge_id,
               doc_id,
               vector_id,
               slice_name,
               content,
               del_flag
        from ai_doc_slice
    </sql>

    <select id="selectAiDocSliceList" parameterType="AiDocSlice" resultMap="AiDocSliceResult">
        <include refid="selectAiDocSliceVo"/>
        <where>
            <if test="knowledgeId != null ">and knowledge_id = #{knowledgeId}</if>
            <if test="docId != null ">and doc_id = #{docId}</if>
            <if test="sliceName != null  and sliceName != ''">and slice_name like concat('%', #{sliceName}, '%')</if>
            <if test="content != null  and content != ''">and content = #{content}</if>
            and del_flag = 0
        </where>
    </select>

    <select id="selectAiDocSliceBySliceId" parameterType="Long" resultMap="AiDocSliceResult">
        <include refid="selectAiDocSliceVo"/>
        where slice_id = #{sliceId}
    </select>

    <insert id="insertAiDocSlice" parameterType="AiDocSlice" useGeneratedKeys="true" keyProperty="sliceId">
        insert into ai_doc_slice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="knowledgeId != null">knowledge_id,</if>
            <if test="docId != null">doc_id,</if>
            <if test="vectorId != null">vector_id,</if>
            <if test="sliceName != null">slice_name,</if>
            <if test="content != null">content,</if>
            <if test="delFlag != null">del_flag,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="knowledgeId != null">#{knowledgeId},</if>
            <if test="docId != null">#{docId},</if>
            <if test="vectorId != null">#{vectorId},</if>
            <if test="sliceName != null">#{sliceName},</if>
            <if test="content != null">#{content},</if>
            <if test="delFlag != null">#{delFlag},</if>
        </trim>
    </insert>

    <!-- 批量插入语句 -->
    <insert id="insertAiDocSliceBatch" useGeneratedKeys="true" keyProperty="sliceId" parameterType="List">
        INSERT INTO ai_doc_slice (knowledge_id, doc_id, vector_id, slice_name, content)
        VALUES
        <foreach collection="aiDocSliceList" item="aiDocSlice" separator=",">
            (#{aiDocSlice.knowledgeId}, #{aiDocSlice.docId}, #{aiDocSlice.vectorId}, #{aiDocSlice.sliceName},
            #{aiDocSlice.content})
        </foreach>
    </insert>

    <update id="updateAiDocSlice" parameterType="AiDocSlice">
        update ai_doc_slice
        <trim prefix="SET" suffixOverrides=",">
            <if test="knowledgeId != null">knowledge_id = #{knowledgeId},</if>
            <if test="docId != null">doc_id = #{docId},</if>
            <if test="sliceName != null">slice_name = #{sliceName},</if>
            <if test="content != null">content = #{content},</if>
        </trim>
        where slice_id = #{sliceId}
    </update>

    <delete id="deleteAiDocSliceBySliceId" parameterType="Long">
        update ai_doc_slice
        set del_flag = 0
        where slice_id = #{sliceId}
    </delete>

    <select id="selectAiDocSliceVectorIdBySliceIds" parameterType="Long" resultType="String">
        SELECT vector_id FROM `ai_doc_slice` where slice_id in
        <foreach item="sliceId" collection="array" open="(" separator="," close=")">
            #{sliceId}
        </foreach>
    </select>

    <delete id="deleteAiDocSliceBySliceIds" parameterType="Long">
        update ai_doc_slice set del_flag = 0 where slice_id in
        <foreach item="sliceId" collection="array" open="(" separator="," close=")">
            #{sliceId}
        </foreach>
    </delete>

    <select id="selectAiDocSliceVectorIdByDocIds" parameterType="Long" resultType="String">
        SELECT vector_id FROM `ai_doc_slice` where doc_id in
        <foreach item="docId" collection="array" open="(" separator="," close=")">
            #{docId}
        </foreach>
    </select>

    <delete id="deleteAiDocSliceByDocIds" parameterType="Long">
        update ai_doc_slice set del_flag = 1 where doc_id in
        <foreach item="docId" collection="array" open="(" separator="," close=")">
            #{docId}
        </foreach>
    </delete>

    <select id="selectAiDocSliceVectorIdByKnowledgeIds" parameterType="Long" resultType="String">
        SELECT vector_id FROM `ai_doc_slice` where knowledge_id in
        <foreach item="knowledgeId" collection="array" open="(" separator="," close=")">
            #{knowledgeId}
        </foreach>
    </select>

    <delete id="deleteAiDocSliceByKnowledgeIds" parameterType="Long">
        update ai_doc_slice set del_flag = 1 where knowledge_id in
        <foreach item="knowledgeId" collection="array" open="(" separator="," close=")">
            #{knowledgeId}
        </foreach>
    </delete>

</mapper>