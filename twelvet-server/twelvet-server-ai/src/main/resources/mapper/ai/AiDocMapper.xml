<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.twelvet.server.ai.mapper.AiDocMapper">

    <resultMap type="AiDoc" id="AiDocResult">
        <result property="docId" column="doc_id"/>
        <result property="knowledgeId" column="knowledge_id"/>
        <result property="sourceType" column="source_type"/>
        <result property="docName" column="doc_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectAiDocVo">
        select doc_id, knowledge_id, source_type, doc_name, create_by, create_time, update_by, update_time
        from ai_doc
    </sql>

    <select id="selectAiDocList" parameterType="AiDoc" resultMap="AiDocResult">
        <include refid="selectAiDocVo"/>
        <where>
            <if test="knowledgeId != null ">and knowledge_id = #{knowledgeId}</if>
            <if test="docName != null  and docName != ''">and doc_name like concat('%', #{docName}, '%')</if>
            and del_flag = 0
        </where>
    </select>

    <select id="selectAiDocByDocId" parameterType="Long" resultMap="AiDocResult">
        <include refid="selectAiDocVo"/>
        where doc_id = #{docId} and del_flag = 0
    </select>

    <insert id="insertAiDoc" parameterType="AiDoc" useGeneratedKeys="true" keyProperty="docId">
        insert into ai_doc
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="knowledgeId != null">knowledge_id,</if>
            <if test="sourceType != null">source_type,</if>
            <if test="docName != null and createBy != '' ">doc_name,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null and updateBy != ''">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="knowledgeId != null">#{knowledgeId},</if>
            <if test="sourceType != null">#{sourceType},</if>
            <if test="docName != null and docName != ''">#{docName},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateAiDoc" parameterType="AiDoc">
        update ai_doc
        <trim prefix="SET" suffixOverrides=",">
            <if test="knowledgeId != null">knowledge_id = #{knowledgeId},</if>
            <if test="docName != null and docName != ''">doc_name = #{docName},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate(),
        </trim>
        where doc_id = #{docId}
    </update>

    <delete id="deleteAiDocByDocId" parameterType="Long">
        delete
        from ai_doc
        where doc_id = #{docId}
    </delete>

    <delete id="deleteAiDocByDocIds" parameterType="Long">
        update ai_doc set del_flag = 1 where doc_id in
        <foreach item="docId" collection="array" open="(" separator="," close=")">
            #{docId}
        </foreach>
    </delete>

    <delete id="deleteAiDocByKnowledgeIds" parameterType="Long">
        update ai_doc set del_flag = 1 where knowledge_id in
        <foreach item="knowledgeId" collection="array" open="(" separator="," close=")">
            #{knowledgeId}
        </foreach>
    </delete>
</mapper>